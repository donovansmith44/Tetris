function Row.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 15
call Array.new 1
pop this 2
push pointer 0
return
function Row.Full 0
push argument 0
pop pointer 0
label WHILE_EXP0
push constant 16384
push constant 32
push argument 2
call Math.multiply 2
add
push argument 1
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
not
not
if-goto WHILE_END0
push argument 1
push constant 16
add
pop argument 1
goto WHILE_EXP0
label WHILE_END0
push argument 1
push constant 352
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function Row.getNumFull 3
push argument 0
pop pointer 0
push constant 0
pop this 0
push constant 176
pop local 0
push constant 246
pop local 1
label WHILE_EXP0
push local 2
push constant 15
lt
not
if-goto WHILE_END0
push this 1
push local 0
push local 1
call Row.Full 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 1
add
pop this 0
push local 2
push this 2
add
push constant 0
not
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 2
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push constant 176
pop local 0
push local 1
push constant 16
sub
pop local 1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push this 0
return
function Row.shiftDown 2
push argument 0
pop pointer 0
push constant 246
push constant 16
push argument 1
call Math.multiply 2
sub
pop local 1
label WHILE_EXP0
push local 1
push constant 24
gt
not
if-goto WHILE_END0
push constant 176
pop local 0
label WHILE_EXP1
push local 0
push constant 352
lt
not
if-goto WHILE_END1
push constant 16384
push local 1
push constant 32
call Math.multiply 2
add
push local 0
push constant 16
call Math.divide 2
add
push constant 16384
push local 1
push constant 16
sub
push constant 32
call Math.multiply 2
add
push local 0
push constant 16
call Math.divide 2
add
call Memory.peek 1
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Row.clear 2
push argument 0
pop pointer 0
label WHILE_EXP0
push local 0
push constant 15
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
pop pointer 1
push that 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push local 0
call Row.shiftDown 2
pop temp 0
push local 0
pop local 1
label WHILE_EXP1
push local 1
push constant 15
lt
not
if-goto WHILE_END1
push local 1
push this 2
add
push local 1
push constant 1
add
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 14
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
