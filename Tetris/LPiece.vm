function LPiece.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 8
push argument 2
pop this 7
push argument 0
pop this 0
push argument 1
pop this 1
push this 0
push this 7
add
pop this 2
push this 1
push this 7
add
pop this 4
push this 2
push this 7
add
pop this 3
push this 4
push this 7
add
pop this 5
push this 5
push this 7
add
pop this 6
push pointer 0
return
function LPiece.draw 0
push argument 0
pop pointer 0
push constant 1
call Screen.setColor 1
pop temp 0
push this 8
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push this 1
push this 2
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 4
push constant 2
add
push this 2
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 5
push constant 4
add
push this 2
push this 6
push constant 4
add
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 2
add
push this 5
push constant 4
add
push this 3
push constant 2
add
push this 6
push constant 4
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push this 8
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 1
push this 2
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 2
add
push this 1
push this 3
push constant 2
add
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push constant 2
sub
push this 1
push this 0
push constant 2
sub
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push constant 2
sub
push this 4
push constant 2
add
push this 0
push constant 2
sub
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE1
push this 8
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push this 1
push this 2
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 4
push constant 2
add
push this 2
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 5
push constant 4
add
push this 2
push this 6
push constant 4
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push constant 2
sub
push this 1
push this 0
push constant 2
sub
push this 4
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE2
push this 8
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push this 1
push this 2
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 4
push constant 2
add
push this 2
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push constant 2
sub
push this 4
push constant 2
add
push this 0
push constant 2
sub
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push this 7
sub
push constant 4
sub
push this 4
push constant 2
add
push this 0
push this 7
sub
push constant 4
sub
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE3
push constant 0
return
function LPiece.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 8
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push this 1
push this 2
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 4
push constant 2
add
push this 2
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 5
push constant 4
add
push this 2
push this 6
push constant 4
add
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 2
add
push this 5
push constant 4
add
push this 3
push constant 2
add
push this 6
push constant 4
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push this 8
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 1
push this 2
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 2
push constant 2
add
push this 1
push this 3
push constant 2
add
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push constant 2
sub
push this 1
push this 0
push constant 2
sub
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push constant 2
sub
push this 4
push constant 2
add
push this 0
push constant 2
sub
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE1
push this 8
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push this 1
push this 2
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 4
push constant 2
add
push this 2
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 5
push constant 4
add
push this 2
push this 6
push constant 4
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push constant 2
sub
push this 1
push this 0
push constant 2
sub
push this 4
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE2
push this 8
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push this 1
push this 2
push this 4
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 4
push constant 2
add
push this 2
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push constant 2
sub
push this 4
push constant 2
add
push this 0
push constant 2
sub
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 7
sub
push this 7
sub
push constant 4
sub
push this 4
push constant 2
add
push this 0
push this 7
sub
push constant 4
sub
push this 5
push constant 2
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE3
push constant 0
return
function LPiece.incy 0
push argument 0
pop pointer 0
push this 1
push constant 1
add
pop this 1
push this 1
push this 7
add
pop this 4
push this 4
push this 7
add
pop this 5
push this 5
push this 7
add
pop this 6
push constant 0
return
function LPiece.moveRight 0
push argument 0
pop pointer 0
push this 0
push constant 16
add
pop this 0
push this 0
push this 7
add
pop this 2
push this 2
push this 7
add
pop this 3
push constant 100
call Sys.wait 1
pop temp 0
push constant 0
return
function LPiece.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 16
sub
pop this 0
push this 0
push this 7
add
pop this 2
push this 2
push this 7
add
pop this 3
push constant 100
call Sys.wait 1
pop temp 0
push constant 0
return
function LPiece.canMoveDown 0
push argument 0
pop pointer 0
push this 8
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 16384
push this 6
push constant 6
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 6
push constant 6
add
push constant 32
call Math.multiply 2
add
push this 3
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push this 8
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 16384
push this 5
push constant 4
add
push constant 32
call Math.multiply 2
add
push this 0
push this 7
sub
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 3
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
label IF_FALSE2
push this 8
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 16384
push this 6
push constant 6
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 0
push this 7
sub
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
label IF_FALSE4
push this 8
push constant 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 16384
push this 5
push constant 4
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 5
push constant 4
add
push constant 32
call Math.multiply 2
add
push this 0
push this 7
sub
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
push constant 16384
push this 5
push constant 4
add
push constant 32
call Math.multiply 2
add
push this 0
push this 7
sub
push this 7
sub
push constant 4
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
return
label IF_FALSE7
label IF_FALSE6
push constant 0
return
function LPiece.canMoveRight 0
push argument 0
pop pointer 0
push this 8
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 16384
push this 1
push constant 32
call Math.multiply 2
add
push this 2
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 6
push constant 4
add
push constant 32
call Math.multiply 2
add
push this 3
push constant 4
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 2
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
push constant 16384
push this 5
push constant 4
add
push constant 32
call Math.multiply 2
add
push this 2
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push this 8
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 16384
push this 5
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 4
push constant 32
call Math.multiply 2
add
push this 3
push constant 4
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
label IF_FALSE2
push this 8
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 16384
push this 1
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 2
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
push constant 16384
push this 5
push constant 4
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
label IF_FALSE4
push this 8
push constant 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 16384
push this 1
push constant 32
call Math.multiply 2
add
push this 2
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 2
push constant 2
add
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
return
label IF_FALSE7
label IF_FALSE6
push constant 0
return
function LPiece.canMoveLeft 0
push argument 0
pop pointer 0
push this 8
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 16384
push this 1
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 6
push constant 4
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
push constant 16384
push this 5
push constant 4
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push this 8
push constant 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 16384
push this 1
push constant 32
call Math.multiply 2
add
push this 0
push this 7
sub
push constant 4
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 0
push this 7
sub
push constant 4
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
label IF_FALSE2
push this 8
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 16384
push this 1
push constant 32
call Math.multiply 2
add
push this 0
push this 7
sub
push constant 4
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
push constant 16384
push this 5
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
label IF_FALSE4
push this 8
push constant 3
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 16384
push this 4
push constant 2
add
push constant 32
call Math.multiply 2
add
push this 0
push this 7
sub
push this 7
sub
push constant 6
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
push constant 16384
push this 1
push constant 32
call Math.multiply 2
add
push this 0
push constant 2
sub
push constant 16
call Math.divide 2
add
call Memory.peek 1
push constant 0
eq
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
return
label IF_FALSE7
label IF_FALSE6
push constant 0
return
function LPiece.changeOrientation 0
push argument 0
pop pointer 0
push this 8
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 8
push constant 150
call Sys.wait 1
pop temp 0
push constant 0
return
label IF_FALSE0
push this 8
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
pop this 8
push constant 150
call Sys.wait 1
pop temp 0
push constant 0
return
label IF_FALSE1
push this 8
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 3
pop this 8
push constant 150
call Sys.wait 1
pop temp 0
push constant 0
return
label IF_FALSE2
push this 8
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
pop this 8
push constant 150
call Sys.wait 1
pop temp 0
push constant 0
return
label IF_FALSE3
push constant 0
return
